create database casestudy1
use casestudy1
select * from fact
select * from location
select * from product


--1. Display the number of states present in the LocationTable.
select count(distinct state) from location

--2. How many products are of regular type?

select count(Product) from Product where type = 'regular'

--3. How much spending has been done on marketing of product ID 1?

SELECT sum(marketing) from fact where ProductId=1

--4. What is the minimum sales of a product?

select product,sales from fact F
join product p
ON F.ProductId=p.ProductId 
where sales = (
select min(sales) from fact)

--5. Display the max Cost of Good Sold (COGS)
select * from fact 
where COGS = 
(select max(COGS) from fact)

--6. Display the details of the product where product type is coffee
select * from product
where Product_Type='Coffee'

--7. Display the details where total expenses are greater than 40.

select * from fact where Total_Expenses>40

--8. What is the average sales in area code 719?
select AVG(sales) from fact where Area_Code=719

--9. Find out the total profit generated by Colorado state.
select Sum(profit) from fact F
join Location
ON 
F.Area_Code=Location.Area_Code
where state = 'colorado'

--10. Display the average inventory for each product ID.
select productid,avg(inventory) from fact group by ProductId order by ProductId

--11. Display state in a sequential order in a Location Table.

select distinct state from location order by state

--12. Display the average budget margin of the Product where the average budget margin should be greater than 100

select p.product,avg(budget_margin) from fact f
join product p
on f.productid = p.ProductId
group by product
having AVG(Budget_Margin)>100

--13. What is the total sales done on date 2010-01-01?
select sum(sales) from fact where date= '2010-01-01'

--14. Display the average total expense of each product ID on an individual date.
select Date, Productid, AVG(Total_Expenses) from fact 
group by Date,ProductId
order by Date, ProductId
--15. Display the table with the following attributes such as date, productID, product_type, product, 
--sales, profit, state, area_code

Select date, f.productid, product_type, product, sales, state, L.area_code from Fact f
join
Product P
on F.ProductId=P.ProductId
join Location L
on F.Area_Code=L.Area_Code

--16. Display the rank without any gap to show the sales wise rank.

Select Sales,DENSE_RANK() over(order by sales desc) as Rank from fact

--17. Find the state wise profit and sales. 

Select State,Sum(Profit)Profit, Sum(Sales)Sales from Fact 
join Location 
on Fact.Area_Code=Location.Area_Code
group by State

--18.

Select State, Product, Sum(Profit)Profit, Sum(Sales)Sales from Fact 
join Location 
on Fact.Area_Code=Location.Area_Code
join Product 
on Fact.ProductId=Product.ProductId
group by State,Product
order by State,Product

--19.

Select Sales,(Sales*0.05)five_percent,(Sales+(Sales*0.05))Newsales from fact


--20.

Select Product.ProductId,Product.Product_Type,Profit from fact 
join Product 
on Fact.ProductId=Product.ProductId
where Profit=
(
Select max(Profit) from fact
)

--21. 

Create or alter procedure sp_product @val varchar(20)
as
begin
Select * from Product 
where Product_Type= @val 
end


--22. 

Select Total_Expenses,IIF
(Total_Expenses>60,'Profit','Loss')
from fact

--23.

Select DATEPART(WEEK,Date)Week,Productid,Sum(Sales)total_sales
from fact 
group by DATEPART(WEEK,Date),Productid
with rollup

--24.

Select Area_Code from fact
union
Select area_code from Location


--25.

Create function fn_product(@value varchar(20))
returns table
as
return
	select * from Product where Product_Type=@value


--26. 

Select * from Product

begin transaction
update Product set Product_Type='Tea' where ProductId=1

rollback transaction

Select * from Product

--27.

Select Date,ProductId,Sales
from fact
where Total_Expenses between 100 and 200
order by date, ProductId

--28. 

Select * from Product

delete from Product
where type='Regular'

--29.

Select * from Product

Select Product, SUBSTRING(Product,5,1)fifth_char,
ASCII(SUBSTRING(Product,5,1)) Ascii_value
from Product































